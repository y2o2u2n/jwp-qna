package subway.domain;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
/**/
/*create table line (
	id bigint generated by default as identity,
	name varchar(255) not null,
	primary key (id)
	)

	create table station (
	id bigint generated by default as identity,
	name varchar(255) not null,
	line_id bigint,
	primary key (id)
	)

	alter table station
	add constraint FKklalypfiiahjy57wtapf4w92
	foreign key (line_id)
	references line*/
@Entity
@Table
public class Station {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY) // DB의 ID 생성 전략에 의존하는 경우, "쓰기 지연"과 관계 없이 DB에 먼저 저장하게 된다. 만약 직접 만드는 ID를 쓴다면, 쿼리가 지연 발생한다.
	private Long id;

	@Column(nullable = false) // nullable은 DB에 관한 제약이므로, 어플리케이션에 대한 유효성 체크는 따로 해야 한다.
	private String name;

	// 다대일 단방향 연관관계
	@ManyToOne
	@JoinColumn(name = "line_id") // join column의 name은 foreign key 이름을 명시하는 것. 없어도 되고 없으면 자동 생성된다.
	private Line line;

	// 연관 관계를 설정하는 메서드
	public void setLine(Line line) {
		this.line = line;
	}

	protected Station() {

	}

	public Station(String name) {
		this.name = name;
	}

	public Long getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public Line getLine() {
		return line;
	}

	public void changeName(String name) {
		this.name = name;
	}
}
